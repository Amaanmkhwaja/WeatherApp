{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sotor\\\\OneDrive\\\\Desktop\\\\NYU\\\\Fifth Year\\\\Collaborating Remotely Build Software from Anywhere\\\\projects\\\\WeatherApp\\\\src\\\\pages\\\\Components\\\\Home\\\\NewCity.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../../../newcitypopup.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCity = () => {\n  _s();\n  const closeAddCityPopup = e => {\n    let userClicked = e.currentTarget;\n    userClicked.parentNode.parentNode.parentNode.classList.add(\"hidden\");\n  };\n  const [search, setSearch] = useState(\"\");\n  const handleChange = event => {\n    setSearch(event.currentTarget.value);\n    document.getElementById(\"submitNewCity\").disabled = false;\n    document.getElementById(\"submitNewCity\").classList.remove(\"disabled\");\n  };\n\n  // const handleAddCity = (e) => {\n  //     if (search.length === 0) {\n  //         document.getElementById(\"errorInput\").classList.remove(\"hidden\");\n  //     } else {\n\n  //         let getAll = document.querySelectorAll(\".cityPic\");\n\n  //         let getSearch = search.split(\",\");\n  //         let getCity = getSearch[0].toLocaleLowerCase();\n  //         // let getCountry = getSearch[1].trim().toLocaleLowerCase();\n\n  //         let endPoint = `https://api.unsplash.com/search/photos?page1&query=${getCity}&client_id=${process.env.REACT_APP_ACCESS_KEY}`;\n\n  //         fetch(endPoint)\n  //             .then(function (response) {\n  //                 let data\n  //                  return response.json();\n  //             })\n  //             .then(function (jsonData) {\n  //                 let getRandom = Math.floor(Math.random() * 20);\n  //                 getAll[2].children[0].src = jsonData.results[getRandom].urls.regular;\n  //                 getAll[2].children[0].alt = jsonData.results[getRandom].description;\n  //                 getAll[2].parentNode.children[1].innerText = `${getSearch[0]}, ${getSearch[1]}`;\n  //                 // let savedLocations = JSON.parse(localStorage.getItem(\"savedLocations\"));\n  //                 // let newSavedLocations = [savedLocations[1], savedLocations[2], search];\n  //                 // let getImages = JSON.parse(localStorage.getItem(\"defaultImages\"));\n  //                 // let newImages = [getImages[1], getImages[2], jsonData.results[getRandom].urls.regular];\n  //                 // localStorage.setItem(\"savedLocations\", JSON.stringify(newSavedLocations)); // save to local storage new 3 locations\n  //                 // localStorage.setItem(\"defaultImages\", JSON.stringify(newImages));\n  //             })\n  //         e.currentTarget.parentNode.parentNode.parentNode.classList.add(\"hidden\"); // close popup\n  //     }\n  // };\n\n  const handleAddCity = async e => {\n    if (!search) {\n      // document.getElementById(\"errorInput\").classList.remove(\"hidden\");\n      alert(\"Please enter a city\");\n    }\n    let getSearch = search.split(\",\");\n    let getCity = getSearch[0].toLocaleLowerCase();\n    // let endPoint = new URL(`https://api.unsplash.com/search/photos?page1&query=${getCity}&client_id=${process.env.REACT_APP_ACCESS_KEY}`);\n    let endPoint = `https://api.unsplash.com/search/photos?page1&query=${getCity}&client_id=${process.env.REACT_APP_ACCESS_KEY}`;\n    const response = await fetch(endPoint);\n    if (response.status === 404) {\n      alert(\"City not found\");\n      return;\n    }\n    const data = await response.json();\n    let getRandomPic = Math.floor(Math.random() * data.results.length);\n    let getURL;\n    try {\n      getURL = new URL(data.results[getRandomPic].urls.regular);\n    } catch (error) {\n      console.log(error);\n      alert(\"Error. Please try again\", error);\n      return;\n    }\n\n    // update to new city\n    let getAll = document.querySelectorAll(\".cityPic\");\n    getAll[2].children[0].src = getURL.href; // update with the new src\n    if (data.results[getRandomPic].alt_description) {\n      // updatet the alt description with the new pic\n      getAll[2].children[0].alt = `${getSearch}: ${data.results[getRandomPic].alt_description}`;\n    } else {\n      getAll[2].children[0].alt = getSearch;\n    }\n    getAll[2].parentNode.children[1].innerText = `${getSearch[0]}, ${getSearch[1]}`; // update the displayed text w/ new city\n\n    let savedLocations = JSON.parse(localStorage.getItem(\"savedLocations\")); // get current saved locations\n    let newSavedLocations = [savedLocations[1], savedLocations[2], search]; // create a new variable with new locations\n    let getImages = JSON.parse(localStorage.getItem(\"allPicsSrc\")); // get the src of all the images\n    let newImages = [getImages[1], getImages[2], getURL.href]; // create a new variable with the new sources\n    // localStorage.setItem(\"savedLocations\", JSON.stringify(newSavedLocations)); // save to local storage new 3 locations\n    // localStorage.setItem(\"defaultImages\", JSON.stringify(newImages));\n\n    document.querySelectorAll(\".newCityPopup\")[0].classList.add(\"hidden\"); // close add city popup\n  };\n\n  // let getSavedLocations = JSON.parse(localStorage.getItem(\"defaultSavedLocations\"));\n  // if (!getSavedLocations) {\n  //     getSavedLocations = [\"New York, USA\", \"Paris, France\", \"Berlin, Germany\"];\n  // }\n\n  // const [getSavedLocations, setLocations] = useState([]);\n  // useEffect(() => {\n  //     const getLocations = JSON.parse(localStorage.getItem(\"defaultSavedLocations\"));\n  //     setLocations(getLocations);\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hidden newCityPopup\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"innerAddCityPopup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"closeBttnDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeAddCityPopup,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innerInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add a new city to save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          id: \"addCitySearch\",\n          name: \"addCitySearch\",\n          placeholder: \"Ex: Barcelona, Spain\",\n          value: search,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddCity,\n          className: \"disabled\",\n          id: \"submitNewCity\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"hidden\",\n          id: \"errorInput\",\n          children: \"Please try again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backgroundPopup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(NewCity, \"42GASUL8pX2/N6Oh5HTh0GvQEF0=\");\n_c = NewCity;\nexport default NewCity;\nvar _c;\n$RefreshReg$(_c, \"NewCity\");","map":{"version":3,"names":["React","useState","useEffect","NewCity","closeAddCityPopup","e","userClicked","currentTarget","parentNode","classList","add","search","setSearch","handleChange","event","value","document","getElementById","disabled","remove","handleAddCity","alert","getSearch","split","getCity","toLocaleLowerCase","endPoint","process","env","REACT_APP_ACCESS_KEY","response","fetch","status","data","json","getRandomPic","Math","floor","random","results","length","getURL","URL","urls","regular","error","console","log","getAll","querySelectorAll","children","src","href","alt_description","alt","innerText","savedLocations","JSON","parse","localStorage","getItem","newSavedLocations","getImages","newImages"],"sources":["C:/Users/sotor/OneDrive/Desktop/NYU/Fifth Year/Collaborating Remotely Build Software from Anywhere/projects/WeatherApp/src/pages/Components/Home/NewCity.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../../../newcitypopup.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst NewCity = () => {\r\n\r\n    \r\n    const closeAddCityPopup = e => {\r\n        let userClicked = e.currentTarget;\r\n        userClicked.parentNode.parentNode.parentNode.classList.add(\"hidden\");\r\n    };\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const handleChange = (event) => {\r\n        setSearch(event.currentTarget.value);\r\n        document.getElementById(\"submitNewCity\").disabled = false;\r\n        document.getElementById(\"submitNewCity\").classList.remove(\"disabled\");\r\n    };\r\n\r\n    // const handleAddCity = (e) => {\r\n    //     if (search.length === 0) {\r\n    //         document.getElementById(\"errorInput\").classList.remove(\"hidden\");\r\n    //     } else {\r\n\r\n    //         let getAll = document.querySelectorAll(\".cityPic\");\r\n\r\n    //         let getSearch = search.split(\",\");\r\n    //         let getCity = getSearch[0].toLocaleLowerCase();\r\n    //         // let getCountry = getSearch[1].trim().toLocaleLowerCase();\r\n\r\n    //         let endPoint = `https://api.unsplash.com/search/photos?page1&query=${getCity}&client_id=${process.env.REACT_APP_ACCESS_KEY}`;\r\n            \r\n    //         fetch(endPoint)\r\n    //             .then(function (response) {\r\n    //                 let data\r\n    //                  return response.json();\r\n    //             })\r\n    //             .then(function (jsonData) {\r\n    //                 let getRandom = Math.floor(Math.random() * 20);\r\n    //                 getAll[2].children[0].src = jsonData.results[getRandom].urls.regular;\r\n    //                 getAll[2].children[0].alt = jsonData.results[getRandom].description;\r\n    //                 getAll[2].parentNode.children[1].innerText = `${getSearch[0]}, ${getSearch[1]}`;\r\n    //                 // let savedLocations = JSON.parse(localStorage.getItem(\"savedLocations\"));\r\n    //                 // let newSavedLocations = [savedLocations[1], savedLocations[2], search];\r\n    //                 // let getImages = JSON.parse(localStorage.getItem(\"defaultImages\"));\r\n    //                 // let newImages = [getImages[1], getImages[2], jsonData.results[getRandom].urls.regular];\r\n    //                 // localStorage.setItem(\"savedLocations\", JSON.stringify(newSavedLocations)); // save to local storage new 3 locations\r\n    //                 // localStorage.setItem(\"defaultImages\", JSON.stringify(newImages));\r\n    //             })\r\n    //         e.currentTarget.parentNode.parentNode.parentNode.classList.add(\"hidden\"); // close popup\r\n    //     }\r\n    // };\r\n\r\n    const handleAddCity = async (e) => {\r\n        if (!search) {\r\n            // document.getElementById(\"errorInput\").classList.remove(\"hidden\");\r\n            alert(\"Please enter a city\");\r\n        }\r\n        let getSearch = search.split(\",\");\r\n        let getCity = getSearch[0].toLocaleLowerCase();\r\n        // let endPoint = new URL(`https://api.unsplash.com/search/photos?page1&query=${getCity}&client_id=${process.env.REACT_APP_ACCESS_KEY}`);\r\n        let endPoint = `https://api.unsplash.com/search/photos?page1&query=${getCity}&client_id=${process.env.REACT_APP_ACCESS_KEY}`;\r\n        const response = await fetch(endPoint);\r\n\r\n        if (response.status === 404) {\r\n            alert(\"City not found\");\r\n            return;\r\n        }\r\n\r\n        const data = await response.json();\r\n        let getRandomPic = Math.floor(Math.random() * data.results.length);\r\n        let getURL;\r\n        try {\r\n            getURL = new URL(data.results[getRandomPic].urls.regular);\r\n        } catch (error) {\r\n            console.log(error);\r\n            alert(\"Error. Please try again\", error);\r\n            return;\r\n        }\r\n\r\n        // update to new city\r\n        let getAll = document.querySelectorAll(\".cityPic\");\r\n        getAll[2].children[0].src = getURL.href;   // update with the new src\r\n        if (data.results[getRandomPic].alt_description) { // updatet the alt description with the new pic\r\n            getAll[2].children[0].alt = `${getSearch}: ${data.results[getRandomPic].alt_description}`;\r\n        } else {\r\n            getAll[2].children[0].alt = getSearch;\r\n        }\r\n        getAll[2].parentNode.children[1].innerText = `${getSearch[0]}, ${getSearch[1]}`; // update the displayed text w/ new city\r\n\r\n        let savedLocations = JSON.parse(localStorage.getItem(\"savedLocations\")); // get current saved locations\r\n        let newSavedLocations = [savedLocations[1], savedLocations[2], search]; // create a new variable with new locations\r\n        let getImages = JSON.parse(localStorage.getItem(\"allPicsSrc\")); // get the src of all the images\r\n        let newImages = [getImages[1], getImages[2], getURL.href]; // create a new variable with the new sources\r\n        // localStorage.setItem(\"savedLocations\", JSON.stringify(newSavedLocations)); // save to local storage new 3 locations\r\n        // localStorage.setItem(\"defaultImages\", JSON.stringify(newImages));\r\n\r\n        document.querySelectorAll(\".newCityPopup\")[0].classList.add(\"hidden\"); // close add city popup\r\n    };\r\n\r\n    // let getSavedLocations = JSON.parse(localStorage.getItem(\"defaultSavedLocations\"));\r\n    // if (!getSavedLocations) {\r\n    //     getSavedLocations = [\"New York, USA\", \"Paris, France\", \"Berlin, Germany\"];\r\n    // }\r\n\r\n    // const [getSavedLocations, setLocations] = useState([]);\r\n    // useEffect(() => {\r\n    //     const getLocations = JSON.parse(localStorage.getItem(\"defaultSavedLocations\"));\r\n    //     setLocations(getLocations);\r\n    // }, []);\r\n\r\n    return (\r\n        <div className=\"hidden newCityPopup\" >\r\n            <div className=\"innerAddCityPopup\">\r\n                <div className=\"closeBttnDiv\">\r\n                    <button onClick={closeAddCityPopup}>Close</button>\r\n                </div>\r\n                <div className=\"innerInfo\">\r\n                    <h3>Add a new city to save</h3>\r\n                    <input type=\"search\" id=\"addCitySearch\" name=\"addCitySearch\" placeholder=\"Ex: Barcelona, Spain\" value={search} onChange={handleChange}/>\r\n                    <button onClick={handleAddCity} className=\"disabled\" id=\"submitNewCity\">Submit</button>\r\n                    {/* <br></br><br></br><label>Choose city to replace with:</label>\r\n                    <select name=\"replaceCity\" id=\"replaceCity\">\r\n                        {getSavedLocations.map((place, idx) => {\r\n                            return (\r\n                                <option name={place.split(\",\")[0].replace(/\\s+/g, '')} id={place.split(\",\")[0].replace(/\\s+/g, '')} key={idx}>{place}</option>\r\n                            )\r\n                        })}\r\n                    </select> */}\r\n                    <h4 className=\"hidden\" id=\"errorInput\">Please try again</h4>\r\n                </div>\r\n            </div>\r\n            <div className=\"backgroundPopup\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewCity;"],"mappings":"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"},"metadata":{},"sourceType":"module"}